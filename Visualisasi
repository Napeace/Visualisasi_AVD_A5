import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

data_dict = {
    "Kab/Kota": ["Pacitan", "Ponorogo", "Trenggalek", "Tulungagung", "Blitar", "Kediri", "Malang",
                 "Lumajang", "Jember", "Banyuwangi", "Bondowoso", "Situbondo", "Probolinggo",
                 "Pasuruan", "Sidoarjo", "Mojokerto", "Jombang", "Nganjuk", "Madiun", "Magetan",
                 "Ngawi", "Bojonegoro", "Tuban", "Lamongan", "Gresik", "Bangkalan", "Sampang",
                 "Pamekasan", "Sumenep", "Kota Kediri", "Kota Blitar", "Kota Malang", "Kota Probolinggo",
                 "Kota Pasuruan", "Kota Mojokerto", "Kota Madiun", "Kota Surabaya", "Kota Batu"],
    "Persentase Penduduk Miskin": [12.97, 8.48, 10.38, 6.38, 8.22, 10.23, 9.42, 8.36, 9.06, 7.05,
                                  13.53, 11.78, 17.52, 9.18, 5.98, 9.79, 8.64, 10.17, 9.78, 9.24,
                                  13.56, 11.66, 14.72, 11.02, 11.23, 18.05, 22.15, 14.69, 18.14,
                                  7.31, 7.01, 4.56, 6.64, 6.16, 5.87, 4.26, 4.79, 3.71],
    "TPT": [3.65, 5.51, 5.37, 6.65, 5.45, 6.83, 6.57, 4.97, 4.06, 5.26, 4.32, 3.38, 3.25, 5.91,
            8.8, 4.83, 5.47, 4.74, 5.84, 4.33, 2.48, 4.69, 4.54, 6.05, 7.84, 8.05, 3.11, 1.4,
            1.36, 4.38, 5.39, 7.66, 4.57, 6.18, 5.05, 6.39, 7.62, 8.43]
}

# Convert data to DataFrame
data_visual = pd.DataFrame(data_dict)

# Linear Regression for Trendline
x = data_visual["Persentase Penduduk Miskin"]
y = data_visual["TPT"]
coefficients = np.polyfit(x, y, 1)
trendline = np.poly1d(coefficients)

# Set Style
sns.set(style="whitegrid")

# Create Scatter Plot
plt.figure(figsize=(12, 7))
sizes = np.array(data_visual["Persentase Penduduk Miskin"]) * 8  # Scaling point sizes
colors = data_visual["Persentase Penduduk Miskin"]  # Color based on kemiskinan
scatter = plt.scatter(x, y, c=colors, s=sizes, cmap='viridis', alpha=0.8, edgecolors="k")

# Plot the trendline
plt.plot(x, trendline(x), color='red', linestyle='--', linewidth=2, label="Trendline")

# Add annotations for outliers
for i, txt in enumerate(data_visual["Kab/Kota"]):
    if data_visual["Persentase Penduduk Miskin"][i] > 18 or data_visual["TPT"][i] < 2:
        plt.annotate(txt, (x[i], y[i]), fontsize=9, xytext=(5,5), textcoords='offset points', color="black")

# Add Titles and Labels
plt.title("Scatter Plot Persentase Penduduk Miskin dan Tingkat Pengangguran Terbuka (TPT)", fontsize=14)
plt.xlabel("Persentase Penduduk Miskin (%)", fontsize=12)
plt.ylabel("Persentase Tingkat Pengangguran Terbuka (TPT) (%)", fontsize=12)
plt.colorbar(scatter, label="Persentase Penduduk Miskin (%)")
plt.legend()
plt.tight_layout()

# Display Plot
plt.show()
